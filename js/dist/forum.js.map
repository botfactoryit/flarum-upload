{"version":3,"sources":["webpack://@botfactoryit/flarum-upload/webpack/bootstrap","webpack://@botfactoryit/flarum-upload/external \"flarum.core.compat['app']\"","webpack://@botfactoryit/flarum-upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@botfactoryit/flarum-upload/external \"flarum.core.compat['helpers/icon']\"","webpack://@botfactoryit/flarum-upload/external \"flarum.core.compat['extend']\"","webpack://@botfactoryit/flarum-upload/external \"flarum.core.compat['components/TextEditor']\"","webpack://@botfactoryit/flarum-upload/external \"flarum.core.compat['Component']\"","webpack://@botfactoryit/flarum-upload/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@botfactoryit/flarum-upload/external \"flarum.core.compat['components/Alert']\"","webpack://@botfactoryit/flarum-upload/./src/forum/components/UploadButton.js","webpack://@botfactoryit/flarum-upload/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","__webpack_exports__","UploadButton","init","this","isLoading","isSuccess","document","addEventListener","paste","view","buttonIcon","_this","attrs","className","title","app","translator","trans","config","el","domElement","$","tooltip","LoadingIndicator","component","icon","label","type","accept","onchange","formUpload","disabled","isError","e","clipboardData","items","item","startsWith","file","getAsFile","upload","target","files","_this2","redraw","did","current","discussion","id","formData","FormData","append","request","method","url","forum","attribute","serialize","raw","data","errorHandler","err","error","then","success","response","_this3","val","bbcode","fileName","props","textArea","getSelectionRange","setValue","trim","insertAtCursor","setTimeout","console","alerts","show","Alert","children","errorToMessage","status","Component","initializers","add","extend","TextEditor","UploadButton_UploadButton"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = flarum.core.compat['app'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/TextEditor'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Alert'];","import Component from 'flarum/Component';\r\nimport icon from 'flarum/helpers/icon';\r\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\r\nimport Alert from 'flarum/components/Alert';\r\n\r\nexport default class UploadButton extends Component {\r\n    init() {\r\n        this.isLoading = false;\r\n        this.isSuccess = false;\r\n\r\n        document.addEventListener('paste', this.paste.bind(this));\r\n    }\r\n\r\n    view() {\r\n        let attrs = {\r\n            className: 'Button hasIcon botfactoryit-upload-button',\r\n            title: app.translator.trans('botfactoryit-upload.forum.upload'),\r\n            config: (el) => {\r\n                this.domElement = el;\r\n                $(el).tooltip();\r\n            }\r\n        };\r\n\r\n        let buttonIcon;\r\n        if (this.isLoading) buttonIcon = LoadingIndicator.component({ className: 'Button-icon' });\r\n        else if (this.isSuccess) buttonIcon = icon('fas fa-check green', { className: 'Button-icon' });\r\n        else buttonIcon = icon('far fa-image', { className: 'Button-icon' });\r\n\r\n        let label = '';\r\n        if (this.isLoading) label = app.translator.trans('botfactoryit-upload.forum.loading');\r\n        else if (this.isSuccess) label = app.translator.trans('botfactoryit-upload.forum.done');\r\n\r\n        // When there is no label, the component element should be shown as a square button\r\n        if (label == '') {\r\n            attrs.className += ' Button--icon';\r\n        }\r\n\r\n        return m('div', attrs, [\r\n                buttonIcon,\r\n                m('span', { className: 'Button-label' }, label),\r\n                m('form#botfactoryit-upload-form', [\r\n                    m('input', {\r\n                        type: 'file',\r\n                        accept: 'image/*',\r\n                        onchange: this.formUpload.bind(this),\r\n                        // disable button while doing things\r\n                        disabled: this.isLoading || this.isSuccess || this.isError\r\n                    })\r\n                ])\r\n            ]\r\n        );\r\n    }\r\n\r\n    paste(e) {\r\n        if (this.isLoading) return;\r\n\r\n        if (e.clipboardData && e.clipboardData.items) {\r\n            let item = e.clipboardData.items[0];\r\n\r\n            if (!item.type.startsWith('image')) {\r\n                return;\r\n            }\r\n\r\n            let file = item.getAsFile();\r\n            this.upload(file);\r\n        }\r\n    }\r\n\r\n    formUpload(e) {\r\n        let file = $(e.target)[0].files[0];\r\n        this.upload(file);\r\n    }\r\n\r\n    upload(file) {\r\n        $(this.domElement).tooltip('hide'); // force removal of the tooltip\r\n        this.isLoading = true;\r\n        m.redraw();\r\n\r\n        let did = 0;\r\n\r\n        if (app.current.discussion) {\r\n            did = app.current.discussion.id();\r\n        }\r\n\r\n        let formData = new FormData();\r\n        formData.append('image', file);\r\n        formData.append('d', did);\r\n\r\n        app.request({\r\n            method: 'POST',\r\n            url: app.forum.attribute('apiUrl') + '/upload',\r\n            serialize: raw => raw,\r\n            data: formData,\r\n            errorHandler: (err) => this.error(err)\r\n        }).then(this.success.bind(this));\r\n    }\r\n\r\n    success(response) {\r\n        // Clear the upload form\r\n        $('#botfactoryit-upload-form input').val('');\r\n\r\n        this.isLoading = false;\r\n        this.isSuccess = true;\r\n        m.redraw();\r\n\r\n        let fileName = response.fileName;\r\n        let bbcode = `[IMMAGINE]${fileName}[/IMMAGINE]`;\r\n\r\n        let cursorPosition = this.props.textArea.getSelectionRange()[0];\r\n\r\n        if (cursorPosition == 0) {\r\n            bbcode += '\\n\\n';\r\n        }\r\n        else {\r\n            bbcode = `\\n\\n${bbcode}\\n\\n`;\r\n        }\r\n\r\n        // Trim the textarea content and insert the bbcode\r\n        this.props.textArea.setValue(this.props.textArea.value().trim());\r\n        this.props.textArea.insertAtCursor(bbcode);\r\n\r\n        // After a bit, re-enable upload\r\n        setTimeout(() => {\r\n            this.isSuccess = false;\r\n            m.redraw();\r\n        }, 2000);\r\n    }\r\n\r\n    error(err) {\r\n        // Output the error to the console, for debugging purposes\r\n        console.error(err);\r\n\r\n        // Clear the upload form\r\n        $('#botfactoryit-upload-form input').val('');\r\n\r\n        this.isLoading = false;\r\n        m.redraw();\r\n\r\n        app.alerts.show(new Alert({\r\n            type: \"error\",\r\n            children: this.errorToMessage(err)\r\n        }));\r\n    }\r\n\r\n    errorToMessage(err) {\r\n        let key;\r\n\r\n        if (err.status == 415) {\r\n            key = 'botfactoryit-upload.forum.error.unsupported';\r\n        }\r\n        else if (err.status == 400) {\r\n            key = 'botfactoryit-upload.forum.error.too-big';\r\n        }\r\n        else {\r\n            key = 'core.lib.error.generic_message';\r\n        }\r\n\r\n        return app.translator.trans(key);\r\n    }\r\n}\r\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport TextEditor from 'flarum/components/TextEditor';\nimport UploadButton from './components/UploadButton';\n\napp.initializers.add('botfactoryit-upload', () => {\n    extend(TextEditor.prototype, 'controlItems', function(items) {\n        items.add('botfactoryit-upload', <UploadButton textArea={this} />);\n    });\n});\n"],"sourceRoot":""}